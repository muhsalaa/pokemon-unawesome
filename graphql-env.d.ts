/* eslint-disable */
/* prettier-ignore */

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: 'Query';
  mutation: never;
  subscription: never;
  types: {
    'Ability': { kind: 'OBJECT'; name: 'Ability'; fields: { 'ability': { name: 'ability'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; 'is_hidden': { name: 'is_hidden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'slot': { name: 'slot'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'BaseList': { kind: 'OBJECT'; name: 'BaseList'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'next': { name: 'next'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'previous': { name: 'previous'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'results': { name: 'results'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'BaseName': { kind: 'OBJECT'; name: 'BaseName'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'BaseResponse': { kind: 'OBJECT'; name: 'BaseResponse'; fields: { 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'params': { name: 'params'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'response': { name: 'response'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'Boolean': unknown;
    'CacheControlScope': { name: 'CacheControlScope'; enumValues: 'PUBLIC' | 'PRIVATE'; };
    'GameIndex': { kind: 'OBJECT'; name: 'GameIndex'; fields: { 'game_index': { name: 'game_index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; }; };
    'HeldItem': { kind: 'OBJECT'; name: 'HeldItem'; fields: { 'item': { name: 'item'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; 'version_details': { name: 'version_details'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VersionDetail'; ofType: null; }; } }; }; };
    'Int': unknown;
    'JSON': unknown;
    'JSONObject': unknown;
    'Move': { kind: 'OBJECT'; name: 'Move'; fields: { 'move': { name: 'move'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; 'version_group_details': { name: 'version_group_details'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'VersionGroupDetail'; ofType: null; }; } }; }; };
    'Pokemon': { kind: 'OBJECT'; name: 'Pokemon'; fields: { 'abilities': { name: 'abilities'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Ability'; ofType: null; }; } }; 'base_experience': { name: 'base_experience'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'forms': { name: 'forms'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; }; } }; 'game_indices': { name: 'game_indices'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'GameIndex'; ofType: null; }; } }; 'height': { name: 'height'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'held_items': { name: 'held_items'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'HeldItem'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'is_default': { name: 'is_default'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'location_area_encounters': { name: 'location_area_encounters'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'moves': { name: 'moves'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Move'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'species': { name: 'species'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; 'sprites': { name: 'sprites'; type: { kind: 'OBJECT'; name: 'Sprite'; ofType: null; } }; 'stats': { name: 'stats'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Stat'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'Type'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PokemonItem': { kind: 'OBJECT'; name: 'PokemonItem'; fields: { 'artwork': { name: 'artwork'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dreamworld': { name: 'dreamworld'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'image': { name: 'image'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PokemonList': { kind: 'OBJECT'; name: 'PokemonList'; fields: { 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'next': { name: 'next'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'nextOffset': { name: 'nextOffset'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'params': { name: 'params'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'prevOffset': { name: 'prevOffset'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'previous': { name: 'previous'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'results': { name: 'results'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'PokemonItem'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; }; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { 'abilities': { name: 'abilities'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'ability': { name: 'ability'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'berries': { name: 'berries'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'berry': { name: 'berry'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'eggGroup': { name: 'eggGroup'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'eggGroups': { name: 'eggGroups'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'encounterMethod': { name: 'encounterMethod'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'encounterMethods': { name: 'encounterMethods'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'evolutionChain': { name: 'evolutionChain'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'evolutionChains': { name: 'evolutionChains'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'evolutionTrigger': { name: 'evolutionTrigger'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'evolutionTriggers': { name: 'evolutionTriggers'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'gender': { name: 'gender'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'genders': { name: 'genders'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'growthRate': { name: 'growthRate'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'growthRates': { name: 'growthRates'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'location': { name: 'location'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'locations': { name: 'locations'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'move': { name: 'move'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'moves': { name: 'moves'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'nature': { name: 'nature'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'natures': { name: 'natures'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'pokemon': { name: 'pokemon'; type: { kind: 'OBJECT'; name: 'Pokemon'; ofType: null; } }; 'pokemons': { name: 'pokemons'; type: { kind: 'OBJECT'; name: 'PokemonList'; ofType: null; } }; 'region': { name: 'region'; type: { kind: 'OBJECT'; name: 'BaseResponse'; ofType: null; } }; 'regions': { name: 'regions'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'species': { name: 'species'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; 'types': { name: 'types'; type: { kind: 'OBJECT'; name: 'BaseList'; ofType: null; } }; }; };
    'Sprite': { kind: 'OBJECT'; name: 'Sprite'; fields: { 'back_default': { name: 'back_default'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'back_female': { name: 'back_female'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'back_shiny': { name: 'back_shiny'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'back_shiny_female': { name: 'back_shiny_female'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'front_default': { name: 'front_default'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'front_female': { name: 'front_female'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'front_shiny': { name: 'front_shiny'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'front_shiny_female': { name: 'front_shiny_female'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Stat': { kind: 'OBJECT'; name: 'Stat'; fields: { 'base_stat': { name: 'base_stat'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'effort': { name: 'effort'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stat': { name: 'stat'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; }; };
    'String': unknown;
    'Type': { kind: 'OBJECT'; name: 'Type'; fields: { 'slot': { name: 'slot'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; }; };
    'Upload': unknown;
    'VersionDetail': { kind: 'OBJECT'; name: 'VersionDetail'; fields: { 'rarity': { name: 'rarity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; }; };
    'VersionGroupDetail': { kind: 'OBJECT'; name: 'VersionGroupDetail'; fields: { 'level_learned_at': { name: 'level_learned_at'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'move_learn_method': { name: 'move_learn_method'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; 'version_group': { name: 'version_group'; type: { kind: 'OBJECT'; name: 'BaseName'; ofType: null; } }; }; };
  };
};

import * as gqlTada from 'gql.tada';

declare module 'gql.tada' {
  interface setupSchema {
    introspection: introspection
  }
}